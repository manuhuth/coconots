library(coconots)
size <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, size = size)
data <- data.sim$data
fit <- cocoReg(order = 2, type = "GP", data = data)
size <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
fit <- cocoReg(order = 2, type = "GP", data = data)
<- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
fit <- cocoReg(order = 2, type = "GP", data = data)
length <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
fit <- cocoReg(order = 2, type = "GP", data = data)
length <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
coco <- cocoReg(order = 2, type = "GP", data = data)
max = 10
xcast = NULL
title = "Probability Mass of Forecasting Period"
xlab="x"
ylab="Probabilities"
if ((class(coco) != "coco.fit") & (class(coco) != "coco.fit.c")) {
stop("The coco object must be from class coco.fit or coco.fit.c")
}
data <- coco$ts
y <- data[length(data)]
parameter <-coco$par
if (class(coco) == "coco.fit.c") {
number_covariates <- ncol(coco$cov) + 1
betas <- parameter[(length(parameter)-number_covariates+1):length(parameter)]
parameter <- head(parameter, -number_covariates)
dot_product <- betas %*% c(1,xcast)
lambda <- exp(dot_product)
parameter <- c(lambda, parameter)
}
type <- coco$type
order <- coco$order
densities <- c()
x <- 0:max
if (order == 1){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP1(x=number, y=y, par=parameter)
}
}
if (order == 2){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP2(x=number, y=y, par=parameter)
}
}
plot <- ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_point() +
ggplot2::labs(title = title, x = xlab, y = ylab)
if ((class(coco) != "coco.fit") & (class(coco) != "coco.fit.c")) {
stop("The coco object must be from class coco.fit or coco.fit.c")
}
data <- coco$ts
y <- data[length(data)]
parameter <-coco$par
if (class(coco) == "coco.fit.c") {
number_covariates <- ncol(coco$cov) + 1
betas <- parameter[(length(parameter)-number_covariates+1):length(parameter)]
parameter <- head(parameter, -number_covariates)
dot_product <- betas %*% c(1,xcast)
lambda <- exp(dot_product)
parameter <- c(lambda, parameter)
}
type <- coco$type
order <- coco$order
densities <- c()
x <- 0:max
if (order == 1){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP1(x=number, y=y, par=parameter)
}
}
if (order == 2){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP2(x=number, y=y, par=parameter)
}
}
plot <- ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_point() +
ggplot2::labs(title = title, x = xlab, y = ylab)
plot <- ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_point() +
ggplot2::labs(title = title, x = xlab, y = ylab)
if (order == 1){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP1(x=number, y=y, par=parameter)
}
}
if (order == 2){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP2(x=number, y=y, par=parameter)
}
}
dGP2(x=number, y=y, par=parameter)
dGP2(1,1,par=parameter)
if ((class(coco) != "coco.fit") & (class(coco) != "coco.fit.c")) {
stop("The coco object must be from class coco.fit or coco.fit.c")
}
data <- coco$ts
y <- data[length(data)]
z <- data[length(data) - 1]
parameter <-coco$par
if (class(coco) == "coco.fit.c") {
number_covariates <- ncol(coco$cov) + 1
betas <- parameter[(length(parameter)-number_covariates+1):length(parameter)]
parameter <- head(parameter, -number_covariates)
dot_product <- betas %*% c(1,xcast)
lambda <- exp(dot_product)
parameter <- c(lambda, parameter)
}
type <- coco$type
order <- coco$order
densities <- c()
x <- 0:max
if (order == 1){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP1(x=number, y=y, par=parameter)
}
}
if (order == 2){
if (type == "Poisson"){parameter <- c(parameter,0)}
for (number in x) {
densities[number+1] <- dGP2(x=number, y=y, z=z, par=parameter)
}
}
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_point() +
ggplot2::labs(title = title, x = xlab, y = ylab)
mode <- match(max(densities), densities) - 1
mode
cumsum(densities)
min(which(distribution_function >= 0.5))
distribution_function <- cumsum(densities)
min(which(distribution_function >= 0.5))
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bars() +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar() +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge") +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=0.1) +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=0.05) +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=0.01) +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=0.04) +
ggplot2::labs(title = title, x = xlab, y = ylab)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=width_bars) +
ggplot2::labs(title = title, x = xlab, y = ylab) + scale_x_continuous(breaks=x)
width_bars = 0.04
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=width_bars) +
ggplot2::labs(title = title, x = xlab, y = ylab) + scale_x_continuous(breaks=x)
ggplot2::ggplot(mapping = ggplot2::aes(x = x, y = densities)) + ggplot2::geom_bar(stat="identity", position="dodge", width=width_bars) +
ggplot2::labs(title = title, x = xlab, y = ylab) + ggplot2::scale_x_continuous(breaks=x)
library(coconots)
length <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
coco <- cocoReg(order = 2, type = "GP", data = data)
cocoForecast(coco, widt_bars = 0.04)
cocoForecast(coco, width_bars = 0.04)
devtools::install(dependencies = TRUE)
library(coconots)
length <- 1000
par <- c(0.5,0.2,0.05,0.3,0.3)
data.sim <- cocoSim(order = 2, type = "GP", par = par, length = length)
data <- data.sim$data
coco <- cocoReg(order = 2, type = "GP", data = data)
cocoForecast(coco)
cocoForecast(coco, width_bars = 0.04)
cocoForecast(coco, width_bars = 2)
cocoForecast(coco, width_bars = 1)
cocoForecast(coco, width_bars = 0.04)
cocoForecast(coco, width_bars = 2)
cocoForecast(coco, width_bars = 1)
devtools::install()

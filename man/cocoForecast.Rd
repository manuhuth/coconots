% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cocoForecast.R
\name{cocoForecast}
\alias{cocoForecast}
\title{Forecast for COCO models}
\usage{
cocoForecast(
  coco,
  max = NULL,
  epsilon = 1e-05,
  xcast = NULL,
  plot = FALSE,
  title = "Probability mass",
  xlab = "x",
  ylab = "Probabilities",
  width_bars = 0.04,
  seasonality = c(1, 2),
  decimals = 4,
  julia = FALSE
)
}
\arguments{
\item{coco}{An object of class coco.fit or coco.fit.c}

\item{max}{The maximum number of the forecast support for the plot. If NULL all values for which the cumulative distribution function is below 1- epsilon are used for the plot.}

\item{epsilon}{If max is NULL, epsilon determines how big the support of the forecast is for the plot.}

\item{xcast}{A vector of covariate values for forecasting (only required for coco.fit.c class)}

\item{plot}{A logical value indicating whether to plot the forecast}

\item{title}{Plot title}

\item{xlab}{X-axis label for the plot}

\item{ylab}{Y-axis label for the plot}

\item{width_bars}{Width of bars in the plot}

\item{seasonality}{A vector of two integers indicating the seasonalities of the time series}

\item{decimals}{Number of decimal places for the forecast probabilities}

\item{julia}{if TRUE, the estimate is predicted with Julia.}
}
\value{
A list containing the plot, density, mode, and median of the forecast
}
\description{
Computes the one-step ahead forecast distribution for the models included in the coconots package.
}
\examples{
lambda <- 1
alpha <- 0.4
set.seed(12345)
data <- cocoSim(order = 1, type = "Poisson", par = c(lambda, alpha), length = 100)$data
#julia_installed = TRUE ensures that the fit object
#is compatible with the julia cocoForecast implementation 
fit <- cocoReg(order = 1, type = "Poisson", data = data)

#median, mode, and density forecasts - R implementation
forecast_r <- cocoForecast(fit)
}

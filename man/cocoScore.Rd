% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cocoScore.R
\name{cocoScore}
\alias{cocoScore}
\title{cocoScore}
\usage{
cocoScore(coco, val.num = 1e-10, julia = FALSE)
}
\arguments{
\item{coco}{An object of class "coco.fit" or "coco.fit.c"}

\item{val.num}{A non-negative real number which is used to stop the calculation of the score in case of GP models. The default value is 1e-10}

\item{julia}{if TRUE, the scores are computed with Julia.}
}
\value{
A list containing the log score, quadratic score and ranked probability score.
}
\description{
The function calculates the log, quadratic and ranked probability scores for a coco model object.
}
\examples{
lambda <- 1
alpha <- 0.4
set.seed(12345)
data <- cocoSim(order = 1, type = "Poisson", par = c(lambda, alpha), length = 100)$data
#julia_installed = TRUE ensures that the fit object
#is compatible with the julia cocoScore implementation 
fit <- cocoReg(order = 1, type = "Poisson", data = data)

#assessment using scoring rules - R implementation
score_r <- cocoScore(fit)
}
\references{
Czado, C. and Gneitling, T. and Held, L. (2009) Predictive Model Assessment for Count Data. \emph{Biometrics}, \bold{65}, 4, 1254--1261.

Jung, R. C. and McCabe, B. P. and Tremayne, A. R. (2016) Model validation and diagnostics. \emph{Handbook of discrete-valued time series}, 189--218.

Jung, R. C. and Tremayne, A. R. (2010) Convolution-closed models for count timeseries with applications. \emph{Journal of Time Series Analysis}, \bold{32}, 3, 268--280.
}
\author{
Manuel Huth
}
